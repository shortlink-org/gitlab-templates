spec:
  inputs:
    provider:
      description: "Kube context provider (e.g., contabo)"

    namespace:
      description: "Kubernetes namespace"

    release_name:
      description: "Helm release name"

    helm_path:
      description: "Path to Helm chart"

    helm_arg:
      default: ""
      description: "Additional Helm args (e.g., -f values.sops.yaml)"

    kube_context:
      default: shortlink-org/shortlink:$[[ inputs.provider ]]
      description: "Fully qualified kube context"

    environment_url:
      default: ""
      description: "Optional environment URL"

---

include:
  - component: $CI_SERVER_FQDN/shortlink-org/gitlab-templates/helm@main

stages:
  - deploy
  - action

deploy:
  extends:
    - .job_template_helm
    - .matrix_deploy_provider
  tags:
    - gitlab-org-docker
  stage: deploy
  script:
    - |
      set -e
      VALUE_FILES=""

      # Check if there are any .values.yaml files
      if ls $[[ inputs.helm_path ]]/*.values.yaml 1> /dev/null 2>&1; then
          for file in $[[ inputs.helm_path ]]/*.values.yaml; do
              VALUE_FILES="$VALUE_FILES -f $file"
          done
      else
          echo "No .values.yaml files found in $[[ inputs.helm_path ]]."
      fi
    - helm secrets upgrade $[[ inputs.release_name ]] $[[ inputs.helm_path ]] $[[ inputs.helm_arg ]] $VALUE_FILES \
      --kube-context=$[[ inputs.kube_context ]] \
      --install \
      --atomic \
      --cleanup-on-fail \
      --wait-for-jobs \
      --namespace=$[[ inputs.namespace ]] \
      --create-namespace=true \
      --set deploy.image.tag=$CI_COMMIT_TAG \
      --set deploy.image.repository=$REGISTRY \
      --set deploy.annotations."app\.gitlab\.com\/app"=$CI_PROJECT_PATH_SLUG,deploy.annotations."app\.gitlab\.com\/env"=$CI_ENVIRONMENT_SLUG
  environment:
    name: $[[ inputs.provider ]]/$[[ inputs.release_name ]]
    deployment_tier: production
    url: $[[ inputs.environment_url ]]
    on_stop: drop
    kubernetes:
      namespace: $[[ inputs.namespace ]]

# action ===============================================================================================================

rollback:
  extends:
    - .job_template_helm
  script:
    - helm --namespace=$[[ inputs.namespace ]] rollback $[[ inputs.release_name ]] 0
  needs:
    - job: deploy
  when: manual

history:
  extends:
    - .job_template_helm
  script:
    - helm --namespace=$[[ inputs.namespace ]] history $[[ inputs.release_name ]]
  needs:
    - job: deploy
  when: manual

drop:
  extends:
    - .job_template_helm
  script:
    - helm del -n $[[ inputs.namespace ]] $[[ inputs.release_name ]]
  needs: []
  environment:
    name: $[[ inputs.provider ]]/$[[ inputs.release_name ]]
    action: stop
  when: manual
