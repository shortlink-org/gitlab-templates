include:
  - local: 'templates/go/template.yml'

spec:
  inputs:
    stage:
      default: test
      description: "Define the stage this job will run in"
    allow_failure:
      default: true
      description: "Whether to allow the job to fail without failing the pipeline"
    coverage_pattern:
      default: '/total:.*\d+.\d+%/'
      description: "Regex pattern to extract coverage percentage"
    artifacts_expire_in:
      default: "14 days"
      description: "How long to keep artifacts"
---

gotest:
  extends:
    - .go-cache
    - .job_teplate_go
  stage: $[[ inputs.stage ]]
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
    CGO_CFLAGS: "-g -O2 -Wno-return-local-addr"
    CGO_ENABLED: 1
  before_script:
    - apk add --update gcc musl-dev
    - go work vendor
    - go install github.com/boumenot/gocover-cobertura@latest
    - go install gotest.tools/gotestsum@latest
  script:
    - $GOPATH/bin/gotestsum --junitfile report.xml --format testname -- -race -coverprofile=coverage.txt -covermode atomic ./...
    - $GOPATH/bin/gocover-cobertura < coverage.txt > coverage.xml
    - go tool cover -func coverage.txt
  allow_failure: $[[ inputs.allow_failure ]]
  coverage: $[[ inputs.coverage_pattern ]]
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: report.xml
    paths:
      - coverage.xml
    expire_in: $[[ inputs.artifacts_expire_in ]]
    expose_as: 'Code Coverage'
  needs: []
  rules:
    - when: always
